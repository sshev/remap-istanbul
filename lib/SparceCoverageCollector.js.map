{"version":3,"sources":["../src/SparceCoverageCollector.js"],"names":["SparceCoverageCollector","srcCoverage","metaInfo","filename","data","path","statementMap","fnMap","branchMap","s","b","f","indexes","lastIndex","meta","filePath","fileCoverage","source","getSourceCoverage","code","srcItem","hits","key","locations","map","push","loc","start","line","column","end","join","index","v","i","length","module","exports"],"mappings":"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","file":"SparceCoverageCollector.js","sourcesContent":["class SparceCoverageCollector {\n\tconstructor() {\n\t\tthis.srcCoverage = {};\n\t\tthis.metaInfo = {};\n\t}\n\n\tgetSourceCoverage(filename) {\n\t\tlet data = this.srcCoverage[filename];\n\t\tif (!data) {\n\t\t\tdata = this.srcCoverage[filename] = {\n\t\t\t\tpath: filename,\n\t\t\t\tstatementMap: {},\n\t\t\t\tfnMap: {},\n\t\t\t\tbranchMap: {},\n\t\t\t\ts: {},\n\t\t\t\tb: {},\n\t\t\t\tf: {},\n\t\t\t};\n\t\t\tthis.metaInfo[filename] = {\n\t\t\t\tindexes: {},\n\t\t\t\tlastIndex: {\n\t\t\t\t\ts: 0,\n\t\t\t\t\tb: 0,\n\t\t\t\t\tf: 0,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tdata,\n\t\t\tmeta: this.metaInfo[filename],\n\t\t};\n\t}\n\n\tsetCoverage(filePath, fileCoverage) {\n\t\tthis.srcCoverage[filePath] = fileCoverage;\n\t}\n\n\tsetSourceCode(filePath, source) {\n\t\tthis.getSourceCoverage(filePath).data.code = source;\n\t}\n\n\n\tgetFinalCoverage() {\n\t\treturn this.srcCoverage;\n\t}\n\n\tupdateBranch(source, srcItem, hits) {\n\t\tconst { data, meta } = this.getSourceCoverage(source);\n\n\t\tlet key = ['b'];\n\t\tsrcItem.locations.map(loc => key.push(\n\t\t\tloc.start.line, loc.start.column,\n\t\t\tloc.end.line, loc.end.line\n\t\t));\n\n\t\tkey = key.join(':');\n\n\t\tlet index = meta.indexes[key];\n\t\tif (!index) {\n\t\t\tmeta.lastIndex.b += 1;\n\t\t\tindex = meta.lastIndex.b;\n\t\t\tmeta.indexes[key] = index;\n\t\t\tdata.branchMap[index] = srcItem;\n\t\t}\n\n\t\tif (!data.b[index]) {\n\t\t\tdata.b[index] = hits.map(v => v);\n\t\t} else {\n\t\t\tfor (let i = 0; i < hits.length; i += 1) {\n\t\t\t\tdata.b[index][i] += hits[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateFunction(source, srcItem, hits) {\n\t\tconst { data, meta } = this.getSourceCoverage(source);\n\n\t\tconst key = [\n\t\t\t'f',\n\t\t\tsrcItem.loc.start.line, srcItem.loc.start.column,\n\t\t\tsrcItem.loc.end.line, srcItem.loc.end.column,\n\t\t].join(':');\n\n\t\tlet index = meta.indexes[key];\n\t\tif (!index) {\n\t\t\tmeta.lastIndex.f += 1;\n\t\t\tindex = meta.lastIndex.f;\n\t\t\tmeta.indexes[key] = index;\n\t\t\tdata.fnMap[index] = srcItem;\n\t\t}\n\n\t\tdata.f[index] = data.f[index] || 0;\n\t\tdata.f[index] += hits;\n\t}\n\n\tupdateStatement(source, srcItem, hits) {\n\t\tconst { data, meta } = this.getSourceCoverage(source);\n\n\t\tconst key = [\n\t\t\t's',\n\t\t\tsrcItem.start.line, srcItem.start.column,\n\t\t\tsrcItem.end.line, srcItem.end.column,\n\t\t].join(':');\n\n\t\tlet index = meta.indexes[key];\n\t\tif (!index) {\n\t\t\tmeta.lastIndex.s += 1;\n\t\t\tindex = meta.lastIndex.s;\n\t\t\tmeta.indexes[key] = index;\n\t\t\tdata.statementMap[index] = srcItem;\n\t\t}\n\n\t\tdata.s[index] = data.s[index] || 0;\n\t\tdata.s[index] += hits;\n\t}\n}\n\nmodule.exports.SparceCoverageCollector = SparceCoverageCollector;\n"]}