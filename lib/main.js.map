{"version":3,"sources":["../src/main.js"],"names":["loadCoverage","require","remap","writeReport","MemoryStore","module","exports","sources","reports","reportOptions","sourceStore","collector","map","length","undefined","all","reportType"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA,IAAMA,eAAeC,QAAQ,gBAAR,CAArB;AACA,IAAMC,QAAQD,QAAQ,SAAR,CAAd;AACA,IAAME,cAAcF,QAAQ,eAAR,CAApB;AACA,IAAMG,cAAcH,QAAQ,2BAAR,CAApB;;AAEA;;;;;;;;;;AAUAI,OAAOC,OAAP,GAAiB,UAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,aAA5B,EAA2C;AAC3D,KAAIC,cAAc,IAAIN,WAAJ,EAAlB;AACA,KAAMO,YAAYT,MAAMF,aAAaO,OAAb,CAAN,EAA6B;AAC9CA,WAASG;AADqC,EAA7B,CAAlB;;AAIA,KAAI,CAAC,oBAAYA,YAAYE,GAAxB,EAA6BC,MAAlC,EAA0C;AACzCH,gBAAcI,SAAd;AACA;;AAGD,QAAO,kBAAQC,GAAR,CACN,oBAAYP,OAAZ,EACEI,GADF,CACM;AAAA,SACJT,YAAYQ,SAAZ,EAAuBK,UAAvB,EAAmCP,iBAAiB,EAApD,EAAwDD,QAAQQ,UAAR,CAAxD,EAA6EN,WAA7E,CADI;AAAA,EADN,CADM,CAAP;AAMA,CAjBD;;AAmBAL,OAAOC,OAAP,CAAeN,YAAf,GAA8BA,YAA9B;AACAK,OAAOC,OAAP,CAAeJ,KAAf,GAAuBA,KAAvB;AACAG,OAAOC,OAAP,CAAeH,WAAf,GAA6BA,WAA7B","file":"main.js","sourcesContent":["/* jshint node:true */\n/* global Promise */\nconst loadCoverage = require('./loadCoverage');\nconst remap = require('./remap');\nconst writeReport = require('./writeReport');\nconst MemoryStore = require('istanbul/lib/store/memory');\n\n/**\n * The basic API for utilising remap-istanbul\n * @param  {Array|string} sources The sources that could be consumed and remapped.\n *                                For muliple sources to be combined together, provide\n *                                an array of strings.\n * @param  {Object} reports An object where each key is the report type required and the value\n *                          is the destination for the report.\n * @param  {Object} reportOptions? An object containing the report options.\n * @return {Promise}         A promise that will resolve when all the reports are written.\n */\nmodule.exports = function (sources, reports, reportOptions) {\n\tlet sourceStore = new MemoryStore();\n\tconst collector = remap(loadCoverage(sources), {\n\t\tsources: sourceStore,\n\t});\n\n\tif (!Object.keys(sourceStore.map).length) {\n\t\tsourceStore = undefined;\n\t}\n\n\n\treturn Promise.all(\n\t\tObject.keys(reports)\n\t\t\t.map(reportType =>\n\t\t\t\twriteReport(collector, reportType, reportOptions || {}, reports[reportType], sourceStore)\n\t\t\t)\n\t);\n};\n\nmodule.exports.loadCoverage = loadCoverage;\nmodule.exports.remap = remap;\nmodule.exports.writeReport = writeReport;\n"]}